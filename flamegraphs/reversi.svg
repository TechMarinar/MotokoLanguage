<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="214" onload="init(evt)" viewBox="0 0 1200 214" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="214.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >reversi.mo</text>
<text id="details" x="10.00" y="197" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="matched" x="1090.00" y="197" > </text>
<g id="frames">
<g >
<title>B_add (104 samples, 0.01%)</title><rect x="291.1" y="101" width="0.2" height="15.0" fill="rgb(253,143,53)" rx="2" ry="2" />
<text  x="294.12" y="111.5" ></text>
</g>
<g >
<title>nat_sub (84 samples, 0.01%)</title><rect x="316.4" y="53" width="0.1" height="15.0" fill="rgb(228,158,25)" rx="2" ry="2" />
<text  x="319.37" y="63.5" ></text>
</g>
<g >
<title>B_sub (165 samples, 0.02%)</title><rect x="291.5" y="101" width="0.3" height="15.0" fill="rgb(228,124,25)" rx="2" ry="2" />
<text  x="294.54" y="111.5" ></text>
</g>
<g >
<title>B_add (1,664 samples, 0.22%)</title><rect x="1177.5" y="85" width="2.5" height="15.0" fill="rgb(253,143,53)" rx="2" ry="2" />
<text  x="1180.47" y="95.5" ></text>
</g>
<g >
<title>$lambda (30,500 samples, 3.95%)</title><rect x="10.3" y="117" width="46.6" height="15.0" fill="rgb(240,133,38)" rx="2" ry="2" />
<text  x="13.26" y="127.5" >$lam..</text>
</g>
<g >
<title>init (8,957 samples, 1.16%)</title><rect x="1168.7" y="117" width="13.7" height="15.0" fill="rgb(236,161,34)" rx="2" ry="2" />
<text  x="1171.69" y="127.5" ></text>
</g>
<g >
<title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::he83cfa60960fe5f5 (172 samples, 0.02%)</title><rect x="1189.3" y="101" width="0.2" height="15.0" fill="rgb(242,127,41)" rx="2" ry="2" />
<text  x="1192.26" y="111.5" ></text>
</g>
<g >
<title>next (4,119 samples, 0.53%)</title><rect x="1175.3" y="101" width="6.3" height="15.0" fill="rgb(230,219,27)" rx="2" ry="2" />
<text  x="1178.30" y="111.5" ></text>
</g>
<g >
<title>B_sub (99 samples, 0.01%)</title><rect x="305.1" y="101" width="0.2" height="15.0" fill="rgb(228,124,25)" rx="2" ry="2" />
<text  x="308.10" y="111.5" ></text>
</g>
<g >
<title>opt_inject (320 samples, 0.04%)</title><rect x="1181.1" y="85" width="0.5" height="15.0" fill="rgb(241,186,39)" rx="2" ry="2" />
<text  x="1184.11" y="95.5" ></text>
</g>
<g >
<title>B_eq (278 samples, 0.04%)</title><rect x="304.7" y="101" width="0.4" height="15.0" fill="rgb(239,130,38)" rx="2" ry="2" />
<text  x="307.66" y="111.5" ></text>
</g>
<g >
<title>B_mul (31,920 samples, 4.13%)</title><rect x="981.7" y="85" width="48.8" height="15.0" fill="rgb(232,143,30)" rx="2" ry="2" />
<text  x="984.69" y="95.5" >B_mul</text>
</g>
<g >
<title>B_eq (228 samples, 0.03%)</title><rect x="321.9" y="85" width="0.3" height="15.0" fill="rgb(239,130,38)" rx="2" ry="2" />
<text  x="324.89" y="95.5" ></text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h00179c2d1f1f86d3 (88 samples, 0.01%)</title><rect x="56.3" y="69" width="0.1" height="15.0" fill="rgb(247,127,47)" rx="2" ry="2" />
<text  x="59.28" y="79.5" ></text>
</g>
<g >
<title>Array.idx_bigint (3,408 samples, 0.44%)</title><rect x="535.7" y="69" width="5.2" height="15.0" fill="rgb(238,150,36)" rx="2" ry="2" />
<text  x="538.65" y="79.5" ></text>
</g>
<g >
<title>alloc_words (4,536 samples, 0.59%)</title><rect x="185.2" y="85" width="6.9" height="15.0" fill="rgb(241,128,39)" rx="2" ry="2" />
<text  x="188.15" y="95.5" ></text>
</g>
<g >
<title>B_lt (396 samples, 0.05%)</title><rect x="314.4" y="69" width="0.6" height="15.0" fill="rgb(226,146,24)" rx="2" ry="2" />
<text  x="317.44" y="79.5" ></text>
</g>
<g >
<title>__wasm_apply_data_relocs (665 samples, 0.09%)</title><rect x="298.9" y="117" width="1.1" height="15.0" fill="rgb(244,119,43)" rx="2" ry="2" />
<text  x="301.95" y="127.5" ></text>
</g>
<g >
<title>place (568,317 samples, 73.61%)</title><rect x="300.0" y="149" width="868.6" height="15.0" fill="rgb(252,165,52)" rx="2" ry="2" />
<text  x="303.02" y="159.5" >place</text>
</g>
<g >
<title>B_sub (792 samples, 0.10%)</title><rect x="329.8" y="85" width="1.2" height="15.0" fill="rgb(228,124,25)" rx="2" ry="2" />
<text  x="332.76" y="95.5" ></text>
</g>
<g >
<title>exists (4,080 samples, 0.53%)</title><rect x="309.6" y="85" width="6.2" height="15.0" fill="rgb(234,142,32)" rx="2" ry="2" />
<text  x="312.58" y="95.5" ></text>
</g>
<g >
<title>motoko_rts::memory::alloc_array::h8af374e489860a2a (183 samples, 0.02%)</title><rect x="462.9" y="69" width="0.3" height="15.0" fill="rgb(235,127,33)" rx="2" ry="2" />
<text  x="465.93" y="79.5" ></text>
</g>
<g >
<title>Array.idx_bigint (72 samples, 0.01%)</title><rect x="307.2" y="101" width="0.1" height="15.0" fill="rgb(238,150,36)" rx="2" ry="2" />
<text  x="310.22" y="111.5" ></text>
</g>
<g >
<title>B_gt (715 samples, 0.09%)</title><rect x="296.5" y="85" width="1.1" height="15.0" fill="rgb(232,124,30)" rx="2" ry="2" />
<text  x="299.50" y="95.5" ></text>
</g>
<g >
<title>exists (32,228 samples, 4.17%)</title><rect x="525.9" y="85" width="49.2" height="15.0" fill="rgb(234,142,32)" rx="2" ry="2" />
<text  x="528.89" y="95.5" >exists</text>
</g>
<g >
<title>memcpy (12,224 samples, 1.58%)</title><rect x="37.1" y="37" width="18.7" height="15.0" fill="rgb(248,144,48)" rx="2" ry="2" />
<text  x="40.13" y="47.5" ></text>
</g>
<g >
<title>B_lt (29,568 samples, 3.83%)</title><rect x="936.5" y="85" width="45.2" height="15.0" fill="rgb(226,146,24)" rx="2" ry="2" />
<text  x="939.50" y="95.5" >B_lt</text>
</g>
<g >
<title>opt_inject (1,080 samples, 0.14%)</title><rect x="1050.9" y="85" width="1.7" height="15.0" fill="rgb(241,186,39)" rx="2" ry="2" />
<text  x="1053.90" y="95.5" ></text>
</g>
<g >
<title>Array.idx (216 samples, 0.03%)</title><rect x="311.1" y="53" width="0.4" height="15.0" fill="rgb(247,150,46)" rx="2" ry="2" />
<text  x="314.15" y="63.5" ></text>
</g>
<g >
<title>B_mul (3,976 samples, 0.51%)</title><rect x="569.1" y="69" width="6.0" height="15.0" fill="rgb(232,143,30)" rx="2" ry="2" />
<text  x="572.07" y="79.5" ></text>
</g>
<g >
<title>can_tag_i64 (928 samples, 0.12%)</title><rect x="524.5" y="69" width="1.4" height="15.0" fill="rgb(234,106,32)" rx="2" ry="2" />
<text  x="527.47" y="79.5" ></text>
</g>
<g >
<title>B_eq (138 samples, 0.02%)</title><rect x="313.6" y="69" width="0.2" height="15.0" fill="rgb(239,130,38)" rx="2" ry="2" />
<text  x="316.62" y="79.5" ></text>
</g>
<g >
<title>@serialize&lt;t&gt; (30,464 samples, 3.95%)</title><rect x="10.3" y="101" width="46.6" height="15.0" fill="rgb(244,156,43)" rx="2" ry="2" />
<text  x="13.29" y="111.5" >@ser..</text>
</g>
<g >
<title>B_eq (12,288 samples, 1.59%)</title><rect x="874.8" y="85" width="18.8" height="15.0" fill="rgb(239,130,38)" rx="2" ry="2" />
<text  x="877.85" y="95.5" ></text>
</g>
<g >
<title>can_tag_i64 (432 samples, 0.06%)</title><rect x="313.0" y="53" width="0.6" height="15.0" fill="rgb(234,106,32)" rx="2" ry="2" />
<text  x="315.96" y="63.5" ></text>
</g>
<g >
<title>Array.idx (5,964 samples, 0.77%)</title><rect x="89.9" y="85" width="9.1" height="15.0" fill="rgb(247,150,46)" rx="2" ry="2" />
<text  x="92.89" y="95.5" ></text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h00179c2d1f1f86d3 (66 samples, 0.01%)</title><rect x="1167.8" y="101" width="0.1" height="15.0" fill="rgb(247,127,47)" rx="2" ry="2" />
<text  x="1170.77" y="111.5" ></text>
</g>
<g >
<title>can_tag_i64 (96 samples, 0.01%)</title><rect x="309.4" y="69" width="0.2" height="15.0" fill="rgb(234,106,32)" rx="2" ry="2" />
<text  x="312.43" y="79.5" ></text>
</g>
<g >
<title>exists (5,484 samples, 0.71%)</title><rect x="316.5" y="101" width="8.4" height="15.0" fill="rgb(234,142,32)" rx="2" ry="2" />
<text  x="319.50" y="111.5" ></text>
</g>
<g >
<title>B_mul (672 samples, 0.09%)</title><rect x="323.8" y="85" width="1.1" height="15.0" fill="rgb(232,143,30)" rx="2" ry="2" />
<text  x="326.85" y="95.5" ></text>
</g>
<g >
<title>@serialize&lt;&gt; (253 samples, 0.03%)</title><rect x="1183.1" y="133" width="0.4" height="15.0" fill="rgb(242,156,41)" rx="2" ry="2" />
<text  x="1186.13" y="143.5" ></text>
</g>
<g >
<title>Array.idx_bigint (1,632 samples, 0.21%)</title><rect x="1172.1" y="101" width="2.5" height="15.0" fill="rgb(238,150,36)" rx="2" ry="2" />
<text  x="1175.14" y="111.5" ></text>
</g>
<g >
<title>opponent (888 samples, 0.12%)</title><rect x="329.6" y="101" width="1.4" height="15.0" fill="rgb(241,199,39)" rx="2" ry="2" />
<text  x="332.61" y="111.5" ></text>
</g>
<g >
<title>eventually (5,508 samples, 0.71%)</title><rect x="308.1" y="101" width="8.4" height="15.0" fill="rgb(243,165,42)" rx="2" ry="2" />
<text  x="311.08" y="111.5" ></text>
</g>
<g >
<title>sleb128_decode (756 samples, 0.10%)</title><rect x="1147.4" y="117" width="1.1" height="15.0" fill="rgb(250,128,49)" rx="2" ry="2" />
<text  x="1150.37" y="127.5" ></text>
</g>
<g >
<title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::he83cfa60960fe5f5 (172 samples, 0.02%)</title><rect x="279.7" y="101" width="0.2" height="15.0" fill="rgb(242,127,41)" rx="2" ry="2" />
<text  x="282.68" y="111.5" ></text>
</g>
<g >
<title>alloc_blob (200 samples, 0.03%)</title><rect x="245.8" y="133" width="0.3" height="15.0" fill="rgb(239,128,38)" rx="2" ry="2" />
<text  x="248.81" y="143.5" ></text>
</g>
<g >
<title>B_mul (504 samples, 0.07%)</title><rect x="315.0" y="69" width="0.8" height="15.0" fill="rgb(232,143,30)" rx="2" ry="2" />
<text  x="318.05" y="79.5" ></text>
</g>
<g >
<title>Array.idx (1,704 samples, 0.22%)</title><rect x="538.3" y="53" width="2.6" height="15.0" fill="rgb(247,150,46)" rx="2" ry="2" />
<text  x="541.26" y="63.5" ></text>
</g>
<g >
<title>B_mul (224 samples, 0.03%)</title><rect x="328.8" y="69" width="0.4" height="15.0" fill="rgb(232,143,30)" rx="2" ry="2" />
<text  x="331.81" y="79.5" ></text>
</g>
<g >
<title>exists (294,222 samples, 38.11%)</title><rect x="580.8" y="101" width="449.7" height="15.0" fill="rgb(234,142,32)" rx="2" ry="2" />
<text  x="583.80" y="111.5" >exists</text>
</g>
<g >
<title>memset (744 samples, 0.10%)</title><rect x="268.2" y="101" width="1.1" height="15.0" fill="rgb(237,144,35)" rx="2" ry="2" />
<text  x="271.18" y="111.5" ></text>
</g>
<g >
<title>@serialize_go&lt;t&gt; (29,380 samples, 3.81%)</title><rect x="10.9" y="85" width="44.9" height="15.0" fill="rgb(244,156,43)" rx="2" ry="2" />
<text  x="13.90" y="95.5" >@ser..</text>
</g>
<g >
<title>can_tag_i64 (800 samples, 0.10%)</title><rect x="578.5" y="53" width="1.2" height="15.0" fill="rgb(234,106,32)" rx="2" ry="2" />
<text  x="581.50" y="63.5" ></text>
</g>
<g >
<title>B_sub (891 samples, 0.12%)</title><rect x="511.2" y="101" width="1.3" height="15.0" fill="rgb(228,124,25)" rx="2" ry="2" />
<text  x="514.16" y="111.5" ></text>
</g>
<g >
<title>motoko_rts::gc::mark_compact::compacting_gc::h05c0577c2657e2f9 (12,708 samples, 1.65%)</title><rect x="1149.0" y="117" width="19.5" height="15.0" fill="rgb(238,127,36)" rx="2" ry="2" />
<text  x="1152.03" y="127.5" ></text>
</g>
<g >
<title>canister_init (16,872 samples, 2.19%)</title><rect x="273.2" y="149" width="25.7" height="15.0" fill="rgb(236,106,34)" rx="2" ry="2" />
<text  x="276.15" y="159.5" >c..</text>
</g>
<g >
<title>link_start (709 samples, 0.09%)</title><rect x="298.9" y="149" width="1.1" height="15.0" fill="rgb(239,129,37)" rx="2" ry="2" />
<text  x="301.94" y="159.5" ></text>
</g>
<g >
<title>can_tag_i64 (288 samples, 0.04%)</title><rect x="149.2" y="85" width="0.4" height="15.0" fill="rgb(234,106,32)" rx="2" ry="2" />
<text  x="152.17" y="95.5" ></text>
</g>
<g >
<title>parse_idl_header (1,791 samples, 0.23%)</title><rect x="1144.6" y="117" width="2.8" height="15.0" fill="rgb(243,149,41)" rx="2" ry="2" />
<text  x="1147.63" y="127.5" ></text>
</g>
<g >
<title>@deserialize&lt;&gt; (1,940 samples, 0.25%)</title><rect x="242.8" y="133" width="3.0" height="15.0" fill="rgb(242,176,41)" rx="2" ry="2" />
<text  x="245.81" y="143.5" ></text>
</g>
<g >
<title>B_add (7,488 samples, 0.97%)</title><rect x="160.3" y="85" width="11.5" height="15.0" fill="rgb(253,143,53)" rx="2" ry="2" />
<text  x="163.34" y="95.5" ></text>
</g>
<g >
<title>all (772,067 samples, 100%)</title><rect x="10.0" y="165" width="1180.0" height="15.0" fill="rgb(255,230,55)" rx="2" ry="2" />
<text  x="13.00" y="175.5" ></text>
</g>
<g >
<title>B_lt (528 samples, 0.07%)</title><rect x="323.0" y="85" width="0.8" height="15.0" fill="rgb(226,146,24)" rx="2" ry="2" />
<text  x="326.04" y="95.5" ></text>
</g>
<g >
<title>B_add (5,356 samples, 0.69%)</title><rect x="463.2" y="101" width="8.2" height="15.0" fill="rgb(253,143,53)" rx="2" ry="2" />
<text  x="466.21" y="111.5" ></text>
</g>
<g >
<title>blob_of_principal (2,176 samples, 0.28%)</title><rect x="281.9" y="117" width="3.3" height="15.0" fill="rgb(228,110,25)" rx="2" ry="2" />
<text  x="284.85" y="127.5" ></text>
</g>
<g >
<title>B_add (78 samples, 0.01%)</title><rect x="307.3" y="101" width="0.2" height="15.0" fill="rgb(253,143,53)" rx="2" ry="2" />
<text  x="310.33" y="111.5" ></text>
</g>
<g >
<title>B_add (624 samples, 0.08%)</title><rect x="327.2" y="69" width="1.0" height="15.0" fill="rgb(253,143,53)" rx="2" ry="2" />
<text  x="330.22" y="79.5" ></text>
</g>
<g >
<title>motoko_rts::gc::mark_compact::compacting_gc::h05c0577c2657e2f9 (4,142 samples, 0.54%)</title><rect x="1183.6" y="117" width="6.3" height="15.0" fill="rgb(238,127,36)" rx="2" ry="2" />
<text  x="1186.61" y="127.5" ></text>
</g>
<g >
<title>B_ge (176 samples, 0.02%)</title><rect x="328.3" y="69" width="0.2" height="15.0" fill="rgb(241,124,39)" rx="2" ry="2" />
<text  x="331.28" y="79.5" ></text>
</g>
<g >
<title>B_sub (46,728 samples, 6.05%)</title><rect x="1061.9" y="85" width="71.4" height="15.0" fill="rgb(228,124,25)" rx="2" ry="2" />
<text  x="1064.91" y="95.5" >B_sub</text>
</g>
<g >
<title>B_add (3,016 samples, 0.39%)</title><rect x="521.3" y="85" width="4.6" height="15.0" fill="rgb(253,143,53)" rx="2" ry="2" />
<text  x="524.28" y="95.5" ></text>
</g>
<g >
<title>can_tag_i64 (512 samples, 0.07%)</title><rect x="295.7" y="69" width="0.8" height="15.0" fill="rgb(234,106,32)" rx="2" ry="2" />
<text  x="298.72" y="79.5" ></text>
</g>
<g >
<title>init (12,129 samples, 1.57%)</title><rect x="280.4" y="133" width="18.5" height="15.0" fill="rgb(236,161,34)" rx="2" ry="2" />
<text  x="283.35" y="143.5" ></text>
</g>
<g >
<title>motoko_rts::gc::mark_compact::mark_object::h909fe7689dd42125 (120 samples, 0.02%)</title><rect x="1189.5" y="101" width="0.2" height="15.0" fill="rgb(242,127,41)" rx="2" ry="2" />
<text  x="1192.53" y="111.5" ></text>
</g>
<g >
<title>opt_project (1,080 samples, 0.14%)</title><rect x="1133.3" y="101" width="1.7" height="15.0" fill="rgb(241,186,39)" rx="2" ry="2" />
<text  x="1136.33" y="111.5" ></text>
</g>
<g >
<title>B_add (5,616 samples, 0.73%)</title><rect x="1038.2" y="85" width="8.6" height="15.0" fill="rgb(253,143,53)" rx="2" ry="2" />
<text  x="1041.23" y="95.5" ></text>
</g>
<g >
<title>__wasm_call_ctors (666 samples, 0.09%)</title><rect x="298.9" y="133" width="1.1" height="15.0" fill="rgb(239,119,38)" rx="2" ry="2" />
<text  x="301.94" y="143.5" ></text>
</g>
<g >
<title>motoko_rts::gc::mark_compact::mark_stack::push_mark_stack::hca7927c3a9867c4e (150 samples, 0.02%)</title><rect x="1167.5" y="85" width="0.3" height="15.0" fill="rgb(242,127,41)" rx="2" ry="2" />
<text  x="1170.54" y="95.5" ></text>
</g>
<g >
<title>can_tag_i64 (1,728 samples, 0.22%)</title><rect x="1044.2" y="69" width="2.6" height="15.0" fill="rgb(234,106,32)" rx="2" ry="2" />
<text  x="1047.18" y="79.5" ></text>
</g>
<g >
<title>nat_sub (700 samples, 0.09%)</title><rect x="579.7" y="53" width="1.1" height="15.0" fill="rgb(228,158,25)" rx="2" ry="2" />
<text  x="582.73" y="63.5" ></text>
</g>
<g >
<title>alloc_words (3,402 samples, 0.44%)</title><rect x="1136.9" y="85" width="5.2" height="15.0" fill="rgb(241,128,39)" rx="2" ry="2" />
<text  x="1139.92" y="95.5" ></text>
</g>
<g >
<title>alloc_array (189 samples, 0.02%)</title><rect x="462.9" y="85" width="0.3" height="15.0" fill="rgb(239,128,37)" rx="2" ry="2" />
<text  x="465.92" y="95.5" ></text>
</g>
<g >
<title>motoko_rts::types::object_size::h3062e2e82e720f4d (384 samples, 0.05%)</title><rect x="1167.9" y="101" width="0.6" height="15.0" fill="rgb(242,127,40)" rx="2" ry="2" />
<text  x="1170.87" y="111.5" ></text>
</g>
<g >
<title>memset (104 samples, 0.01%)</title><rect x="279.5" y="101" width="0.2" height="15.0" fill="rgb(237,144,35)" rx="2" ry="2" />
<text  x="282.52" y="111.5" ></text>
</g>
<g >
<title>@deserialize_go&lt;I&gt; (873 samples, 0.11%)</title><rect x="1143.0" y="117" width="1.3" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1145.99" y="127.5" ></text>
</g>
<g >
<title>leb128_decode (201 samples, 0.03%)</title><rect x="1144.3" y="117" width="0.3" height="15.0" fill="rgb(250,149,49)" rx="2" ry="2" />
<text  x="1147.32" y="127.5" ></text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h00179c2d1f1f86d3 (66 samples, 0.01%)</title><rect x="302.2" y="69" width="0.1" height="15.0" fill="rgb(247,127,47)" rx="2" ry="2" />
<text  x="305.23" y="79.5" ></text>
</g>
<g >
<title>compacting_gc (12,747 samples, 1.65%)</title><rect x="1149.0" y="133" width="19.5" height="15.0" fill="rgb(227,149,24)" rx="2" ry="2" />
<text  x="1151.97" y="143.5" ></text>
</g>
<g >
<title>B_sub (264 samples, 0.03%)</title><rect x="329.2" y="69" width="0.4" height="15.0" fill="rgb(228,124,25)" rx="2" ry="2" />
<text  x="332.21" y="79.5" ></text>
</g>
<g >
<title>text_to_buf (18,880 samples, 2.45%)</title><rect x="27.0" y="53" width="28.8" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="29.95" y="63.5" >te..</text>
</g>
<g >
<title>render (121,652 samples, 15.76%)</title><rect x="56.9" y="117" width="185.9" height="15.0" fill="rgb(243,181,41)" rx="2" ry="2" />
<text  x="59.88" y="127.5" >render</text>
</g>
<g >
<title>compacting_gc (4,697 samples, 0.61%)</title><rect x="273.2" y="133" width="7.2" height="15.0" fill="rgb(227,149,24)" rx="2" ry="2" />
<text  x="276.17" y="143.5" ></text>
</g>
<g >
<title>B_ge (28,050 samples, 3.63%)</title><rect x="893.6" y="85" width="42.9" height="15.0" fill="rgb(241,124,39)" rx="2" ry="2" />
<text  x="896.63" y="95.5" >B_ge</text>
</g>
<g >
<title>opt_project (320 samples, 0.04%)</title><rect x="1181.6" y="101" width="0.5" height="15.0" fill="rgb(241,186,39)" rx="2" ry="2" />
<text  x="1184.62" y="111.5" ></text>
</g>
<g >
<title>eventually (44,672 samples, 5.79%)</title><rect x="512.5" y="101" width="68.3" height="15.0" fill="rgb(243,165,42)" rx="2" ry="2" />
<text  x="515.52" y="111.5" >eventua..</text>
</g>
<g >
<title>memcmp (179 samples, 0.02%)</title><rect x="283.2" y="101" width="0.2" height="15.0" fill="rgb(238,144,36)" rx="2" ry="2" />
<text  x="286.17" y="111.5" ></text>
</g>
<g >
<title>B_add (104 samples, 0.01%)</title><rect x="1174.6" y="101" width="0.2" height="15.0" fill="rgb(253,143,53)" rx="2" ry="2" />
<text  x="1177.63" y="111.5" ></text>
</g>
<g >
<title>can_tag_i64 (144 samples, 0.02%)</title><rect x="315.6" y="53" width="0.2" height="15.0" fill="rgb(234,106,32)" rx="2" ry="2" />
<text  x="318.60" y="63.5" ></text>
</g>
<g >
<title>motoko_rts::text::alloc_text_blob::hd40422fdc2c3b141 (1,708 samples, 0.22%)</title><rect x="240.2" y="85" width="2.6" height="15.0" fill="rgb(229,127,27)" rx="2" ry="2" />
<text  x="243.20" y="95.5" ></text>
</g>
<g >
<title>motoko_rts::gc::mark_compact::compacting_gc::h05c0577c2657e2f9 (4,684 samples, 0.61%)</title><rect x="273.2" y="117" width="7.2" height="15.0" fill="rgb(238,127,36)" rx="2" ry="2" />
<text  x="276.19" y="127.5" ></text>
</g>
<g >
<title>reset (13,989 samples, 1.81%)</title><rect x="1168.6" y="149" width="21.4" height="15.0" fill="rgb(237,165,35)" rx="2" ry="2" />
<text  x="1171.62" y="159.5" >r..</text>
</g>
<g >
<title>motoko_rts::types::Blob::shrink::ha28bedc37a09e9d4 (90 samples, 0.01%)</title><rect x="284.9" y="85" width="0.2" height="15.0" fill="rgb(244,127,43)" rx="2" ry="2" />
<text  x="287.94" y="95.5" ></text>
</g>
<g >
<title>next (4,119 samples, 0.53%)</title><rect x="291.8" y="101" width="6.3" height="15.0" fill="rgb(230,219,27)" rx="2" ry="2" />
<text  x="294.79" y="111.5" ></text>
</g>
<g >
<title>can_tag_i64 (1,136 samples, 0.15%)</title><rect x="573.4" y="53" width="1.7" height="15.0" fill="rgb(234,106,32)" rx="2" ry="2" />
<text  x="576.41" y="63.5" ></text>
</g>
<g >
<title>next (19,260 samples, 2.49%)</title><rect x="150.0" y="101" width="29.4" height="15.0" fill="rgb(230,219,27)" rx="2" ry="2" />
<text  x="152.99" y="111.5" >next</text>
</g>
<g >
<title>memset (444 samples, 0.06%)</title><rect x="1165.5" y="101" width="0.7" height="15.0" fill="rgb(237,144,35)" rx="2" ry="2" />
<text  x="1168.52" y="111.5" ></text>
</g>
<g >
<title>trans_state4 (92 samples, 0.01%)</title><rect x="272.9" y="133" width="0.2" height="15.0" fill="rgb(243,158,42)" rx="2" ry="2" />
<text  x="275.93" y="143.5" ></text>
</g>
<g >
<title>range (173 samples, 0.02%)</title><rect x="1182.1" y="101" width="0.3" height="15.0" fill="rgb(247,146,46)" rx="2" ry="2" />
<text  x="1185.11" y="111.5" ></text>
</g>
<g >
<title>flip (3,096 samples, 0.40%)</title><rect x="324.9" y="101" width="4.7" height="15.0" fill="rgb(244,139,43)" rx="2" ry="2" />
<text  x="327.88" y="111.5" ></text>
</g>
<g >
<title>B_add (312 samples, 0.04%)</title><rect x="309.1" y="85" width="0.5" height="15.0" fill="rgb(253,143,53)" rx="2" ry="2" />
<text  x="312.10" y="95.5" ></text>
</g>
<g >
<title>B_mul (140 samples, 0.02%)</title><rect x="291.3" y="101" width="0.2" height="15.0" fill="rgb(232,143,30)" rx="2" ry="2" />
<text  x="294.32" y="111.5" ></text>
</g>
<g >
<title>bigint_sleb128_decode_word64 (459 samples, 0.06%)</title><rect x="1143.6" y="101" width="0.7" height="15.0" fill="rgb(237,113,36)" rx="2" ry="2" />
<text  x="1146.62" y="111.5" ></text>
</g>
<g >
<title>motoko_rts::principal_id::principal_of_blob::ha3fbc83d9bd51101 (996 samples, 0.13%)</title><rect x="283.6" y="101" width="1.5" height="15.0" fill="rgb(234,127,32)" rx="2" ry="2" />
<text  x="286.55" y="111.5" ></text>
</g>
<g >
<title>memset (104 samples, 0.01%)</title><rect x="1189.1" y="101" width="0.2" height="15.0" fill="rgb(237,144,35)" rx="2" ry="2" />
<text  x="1192.10" y="111.5" ></text>
</g>
<g >
<title>leb128_decode (268 samples, 0.03%)</title><rect x="243.6" y="117" width="0.4" height="15.0" fill="rgb(250,149,49)" rx="2" ry="2" />
<text  x="246.60" y="127.5" ></text>
</g>
<g >
<title>B_mul (13,916 samples, 1.80%)</title><rect x="126.9" y="101" width="21.3" height="15.0" fill="rgb(232,143,30)" rx="2" ry="2" />
<text  x="129.91" y="111.5" >B..</text>
</g>
<g >
<title>Array.idx_bigint (4,944 samples, 0.64%)</title><rect x="451.7" y="101" width="7.6" height="15.0" fill="rgb(238,150,36)" rx="2" ry="2" />
<text  x="454.71" y="111.5" ></text>
</g>
<g >
<title>alloc_blob (150 samples, 0.02%)</title><rect x="1148.6" y="133" width="0.2" height="15.0" fill="rgb(239,128,38)" rx="2" ry="2" />
<text  x="1151.55" y="143.5" ></text>
</g>
<g >
<title>B_add (312 samples, 0.04%)</title><rect x="325.7" y="85" width="0.5" height="15.0" fill="rgb(253,143,53)" rx="2" ry="2" />
<text  x="328.73" y="95.5" ></text>
</g>
<g >
<title>Array_init (2,583 samples, 0.33%)</title><rect x="459.3" y="101" width="3.9" height="15.0" fill="rgb(236,150,34)" rx="2" ry="2" />
<text  x="462.26" y="111.5" ></text>
</g>
<g >
<title>can_tag_i64 (3,408 samples, 0.44%)</title><rect x="552.6" y="53" width="5.2" height="15.0" fill="rgb(234,106,32)" rx="2" ry="2" />
<text  x="555.58" y="63.5" ></text>
</g>
<g >
<title>B_eq (1,130 samples, 0.15%)</title><rect x="557.8" y="69" width="1.7" height="15.0" fill="rgb(239,130,38)" rx="2" ry="2" />
<text  x="560.79" y="79.5" ></text>
</g>
<g >
<title>leb128_decode (402 samples, 0.05%)</title><rect x="1145.5" y="101" width="0.7" height="15.0" fill="rgb(250,149,49)" rx="2" ry="2" />
<text  x="1148.55" y="111.5" ></text>
</g>
<g >
<title>@serialize&lt;t&gt; (1,200 samples, 0.16%)</title><rect x="300.8" y="101" width="1.9" height="15.0" fill="rgb(244,156,43)" rx="2" ry="2" />
<text  x="303.82" y="111.5" ></text>
</g>
<g >
<title>B_lt (176 samples, 0.02%)</title><rect x="328.5" y="69" width="0.3" height="15.0" fill="rgb(226,146,24)" rx="2" ry="2" />
<text  x="331.54" y="79.5" ></text>
</g>
<g >
<title>memcpy (213 samples, 0.03%)</title><rect x="302.3" y="85" width="0.4" height="15.0" fill="rgb(248,144,48)" rx="2" ry="2" />
<text  x="305.33" y="95.5" ></text>
</g>
<g >
<title>alloc_words (126 samples, 0.02%)</title><rect x="298.7" y="85" width="0.2" height="15.0" fill="rgb(241,128,39)" rx="2" ry="2" />
<text  x="301.67" y="95.5" ></text>
</g>
<g >
<title>can_tag_i64 (192 samples, 0.02%)</title><rect x="324.6" y="69" width="0.3" height="15.0" fill="rgb(234,106,32)" rx="2" ry="2" />
<text  x="327.58" y="79.5" ></text>
</g>
<g >
<title>parse_idl_header (288 samples, 0.04%)</title><rect x="1182.7" y="117" width="0.4" height="15.0" fill="rgb(243,149,41)" rx="2" ry="2" />
<text  x="1185.68" y="127.5" ></text>
</g>
<g >
<title>B_mul (84 samples, 0.01%)</title><rect x="303.1" y="117" width="0.1" height="15.0" fill="rgb(232,143,30)" rx="2" ry="2" />
<text  x="306.12" y="127.5" ></text>
</g>
<g >
<title>Array.idx_bigint (27,360 samples, 3.54%)</title><rect x="675.2" y="85" width="41.8" height="15.0" fill="rgb(238,150,36)" rx="2" ry="2" />
<text  x="678.19" y="95.5" >Arr..</text>
</g>
<g >
<title>can_tag_i64 (9,120 samples, 1.18%)</title><rect x="1016.5" y="69" width="14.0" height="15.0" fill="rgb(234,106,32)" rx="2" ry="2" />
<text  x="1019.54" y="79.5" ></text>
</g>
<g >
<title>opt_inject (1,440 samples, 0.19%)</title><rect x="177.2" y="85" width="2.2" height="15.0" fill="rgb(241,186,39)" rx="2" ry="2" />
<text  x="180.23" y="95.5" ></text>
</g>
<g >
<title>can_tag_i64 (96 samples, 0.01%)</title><rect x="326.1" y="69" width="0.1" height="15.0" fill="rgb(234,106,32)" rx="2" ry="2" />
<text  x="329.06" y="79.5" ></text>
</g>
<g >
<title>B_sub (1,188 samples, 0.15%)</title><rect x="148.2" y="101" width="1.8" height="15.0" fill="rgb(228,124,25)" rx="2" ry="2" />
<text  x="151.18" y="111.5" ></text>
</g>
<g >
<title>is_empty (1,204 samples, 0.16%)</title><rect x="303.2" y="117" width="1.9" height="15.0" fill="rgb(243,129,42)" rx="2" ry="2" />
<text  x="306.24" y="127.5" ></text>
</g>
<g >
<title>Array.idx (96 samples, 0.01%)</title><rect x="327.1" y="53" width="0.1" height="15.0" fill="rgb(247,150,46)" rx="2" ry="2" />
<text  x="330.08" y="63.5" ></text>
</g>
<g >
<title>@serialize_go&lt;t&gt; (387 samples, 0.05%)</title><rect x="301.3" y="85" width="0.6" height="15.0" fill="rgb(244,156,43)" rx="2" ry="2" />
<text  x="304.28" y="95.5" ></text>
</g>
<g >
<title>init (8,957 samples, 1.16%)</title><rect x="285.2" y="117" width="13.7" height="15.0" fill="rgb(236,161,34)" rx="2" ry="2" />
<text  x="288.18" y="127.5" ></text>
</g>
<g >
<title>motoko_rts::principal_id::enc_stash::h532e856929ade71f (372 samples, 0.05%)</title><rect x="284.4" y="85" width="0.5" height="15.0" fill="rgb(241,127,39)" rx="2" ry="2" />
<text  x="287.37" y="95.5" ></text>
</g>
<g >
<title>$lambda (1,227 samples, 0.16%)</title><rect x="300.8" y="117" width="1.9" height="15.0" fill="rgb(240,133,38)" rx="2" ry="2" />
<text  x="303.80" y="127.5" ></text>
</g>
<g >
<title>set_and_flip (16,823 samples, 2.18%)</title><rect x="305.3" y="117" width="25.7" height="15.0" fill="rgb(244,154,43)" rx="2" ry="2" />
<text  x="308.25" y="127.5" >s..</text>
</g>
<g >
<title>opponent (444 samples, 0.06%)</title><rect x="315.8" y="85" width="0.7" height="15.0" fill="rgb(241,199,39)" rx="2" ry="2" />
<text  x="318.82" y="95.5" ></text>
</g>
<g >
<title>B_eq (324 samples, 0.04%)</title><rect x="307.5" y="101" width="0.4" height="15.0" fill="rgb(239,130,38)" rx="2" ry="2" />
<text  x="310.45" y="111.5" ></text>
</g>
<g >
<title>opponent (3,700 samples, 0.48%)</title><rect x="575.1" y="85" width="5.7" height="15.0" fill="rgb(241,199,39)" rx="2" ry="2" />
<text  x="578.14" y="95.5" ></text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h00179c2d1f1f86d3 (88 samples, 0.01%)</title><rect x="272.0" y="101" width="0.2" height="15.0" fill="rgb(247,127,47)" rx="2" ry="2" />
<text  x="275.02" y="111.5" ></text>
</g>
<g >
<title>opponent (52,392 samples, 6.79%)</title><rect x="1053.3" y="101" width="80.0" height="15.0" fill="rgb(241,199,39)" rx="2" ry="2" />
<text  x="1056.25" y="111.5" >opponent</text>
</g>
<g >
<title>leb128_decode (134 samples, 0.02%)</title><rect x="1182.9" y="101" width="0.2" height="15.0" fill="rgb(250,149,49)" rx="2" ry="2" />
<text  x="1185.89" y="111.5" ></text>
</g>
<g >
<title>can_tag_i64 (216 samples, 0.03%)</title><rect x="511.9" y="85" width="0.3" height="15.0" fill="rgb(234,106,32)" rx="2" ry="2" />
<text  x="514.90" y="95.5" ></text>
</g>
<g >
<title>leb128_decode (67 samples, 0.01%)</title><rect x="1182.6" y="117" width="0.1" height="15.0" fill="rgb(250,149,49)" rx="2" ry="2" />
<text  x="1185.57" y="127.5" ></text>
</g>
<g >
<title>B_lt (3,124 samples, 0.40%)</title><rect x="564.3" y="69" width="4.8" height="15.0" fill="rgb(226,146,24)" rx="2" ry="2" />
<text  x="567.29" y="79.5" ></text>
</g>
<g >
<title>opt_project (320 samples, 0.04%)</title><rect x="298.1" y="101" width="0.5" height="15.0" fill="rgb(241,186,39)" rx="2" ry="2" />
<text  x="301.11" y="111.5" ></text>
</g>
<g >
<title>B_ge (396 samples, 0.05%)</title><rect x="313.8" y="69" width="0.6" height="15.0" fill="rgb(241,124,39)" rx="2" ry="2" />
<text  x="316.84" y="79.5" ></text>
</g>
<g >
<title>memcpy (284 samples, 0.04%)</title><rect x="56.4" y="85" width="0.5" height="15.0" fill="rgb(248,144,48)" rx="2" ry="2" />
<text  x="59.42" y="95.5" ></text>
</g>
<g >
<title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::he83cfa60960fe5f5 (666 samples, 0.09%)</title><rect x="1166.2" y="101" width="1.0" height="15.0" fill="rgb(242,127,41)" rx="2" ry="2" />
<text  x="1169.20" y="111.5" ></text>
</g>
<g >
<title>B_ge (66 samples, 0.01%)</title><rect x="303.0" y="117" width="0.1" height="15.0" fill="rgb(241,124,39)" rx="2" ry="2" />
<text  x="306.02" y="127.5" ></text>
</g>
<g >
<title>memcpy (3,052 samples, 0.40%)</title><rect x="231.2" y="85" width="4.7" height="15.0" fill="rgb(248,144,48)" rx="2" ry="2" />
<text  x="234.23" y="95.5" ></text>
</g>
<g >
<title>can_tag_i64 (96 samples, 0.01%)</title><rect x="316.2" y="53" width="0.2" height="15.0" fill="rgb(234,106,32)" rx="2" ry="2" />
<text  x="319.22" y="63.5" ></text>
</g>
<g >
<title>next (14,445 samples, 1.87%)</title><rect x="1030.5" y="101" width="22.1" height="15.0" fill="rgb(230,219,27)" rx="2" ry="2" />
<text  x="1033.48" y="111.5" >n..</text>
</g>
<g >
<title>$lambda (152,200 samples, 19.71%)</title><rect x="10.2" y="133" width="232.6" height="15.0" fill="rgb(240,133,38)" rx="2" ry="2" />
<text  x="13.19" y="143.5" >$lambda</text>
</g>
<g >
<title>Array.idx (2,472 samples, 0.32%)</title><rect x="455.5" y="85" width="3.8" height="15.0" fill="rgb(247,150,46)" rx="2" ry="2" />
<text  x="458.48" y="95.5" ></text>
</g>
<g >
<title>B_eq (5,335 samples, 0.69%)</title><rect x="118.8" y="101" width="8.1" height="15.0" fill="rgb(239,130,38)" rx="2" ry="2" />
<text  x="121.75" y="111.5" ></text>
</g>
<g >
<title>B_eq (20,166 samples, 2.61%)</title><rect x="471.4" y="101" width="30.8" height="15.0" fill="rgb(239,130,38)" rx="2" ry="2" />
<text  x="474.39" y="111.5" >B_eq</text>
</g>
<g >
<title>alloc_blob (100 samples, 0.01%)</title><rect x="1183.2" y="117" width="0.2" height="15.0" fill="rgb(239,128,38)" rx="2" ry="2" />
<text  x="1186.25" y="127.5" ></text>
</g>
<g >
<title>@deserialize&lt;&gt; (485 samples, 0.06%)</title><rect x="1182.4" y="133" width="0.7" height="15.0" fill="rgb(242,176,41)" rx="2" ry="2" />
<text  x="1185.37" y="143.5" ></text>
</g>
<g >
<title>valid_moves (530,732 samples, 68.74%)</title><rect x="331.0" y="117" width="811.1" height="15.0" fill="rgb(237,120,35)" rx="2" ry="2" />
<text  x="333.97" y="127.5" >valid_moves</text>
</g>
<g >
<title>motoko_rts::gc::mark_compact::mark_object::h909fe7689dd42125 (120 samples, 0.02%)</title><rect x="279.9" y="101" width="0.2" height="15.0" fill="rgb(242,127,41)" rx="2" ry="2" />
<text  x="282.94" y="111.5" ></text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h00179c2d1f1f86d3 (2,816 samples, 0.36%)</title><rect x="235.9" y="85" width="4.3" height="15.0" fill="rgb(247,127,47)" rx="2" ry="2" />
<text  x="238.89" y="95.5" ></text>
</g>
<g >
<title>obj_idx&lt;0&gt; (459 samples, 0.06%)</title><rect x="1052.6" y="101" width="0.7" height="15.0" fill="rgb(247,139,46)" rx="2" ry="2" />
<text  x="1055.55" y="111.5" ></text>
</g>
<g >
<title>Array.idx_bigint (432 samples, 0.06%)</title><rect x="310.8" y="69" width="0.7" height="15.0" fill="rgb(238,150,36)" rx="2" ry="2" />
<text  x="313.82" y="79.5" ></text>
</g>
<g >
<title>motoko_rts::types::object_size::h3062e2e82e720f4d (128 samples, 0.02%)</title><rect x="280.2" y="101" width="0.2" height="15.0" fill="rgb(242,127,40)" rx="2" ry="2" />
<text  x="283.16" y="111.5" ></text>
</g>
<g >
<title>text_to_buf (258 samples, 0.03%)</title><rect x="301.5" y="69" width="0.4" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="304.48" y="79.5" ></text>
</g>
<g >
<title>Array.idx_bigint (192 samples, 0.02%)</title><rect x="326.9" y="69" width="0.3" height="15.0" fill="rgb(238,150,36)" rx="2" ry="2" />
<text  x="329.93" y="79.5" ></text>
</g>
<g >
<title>motoko_rts::gc::mark_compact::compacting_gc::h05c0577c2657e2f9 (17,496 samples, 2.27%)</title><rect x="246.2" y="117" width="26.7" height="15.0" fill="rgb(238,127,36)" rx="2" ry="2" />
<text  x="249.19" y="127.5" >m..</text>
</g>
<g >
<title>B_ge (3,124 samples, 0.40%)</title><rect x="559.5" y="69" width="4.8" height="15.0" fill="rgb(241,124,39)" rx="2" ry="2" />
<text  x="562.52" y="79.5" ></text>
</g>
<g >
<title>B_gt (3,564 samples, 0.46%)</title><rect x="171.8" y="85" width="5.4" height="15.0" fill="rgb(232,124,30)" rx="2" ry="2" />
<text  x="174.78" y="95.5" ></text>
</g>
<g >
<title>B_sub (3,300 samples, 0.43%)</title><rect x="575.8" y="69" width="5.0" height="15.0" fill="rgb(228,124,25)" rx="2" ry="2" />
<text  x="578.75" y="79.5" ></text>
</g>
<g >
<title>B_gt (2,673 samples, 0.35%)</title><rect x="1046.8" y="85" width="4.1" height="15.0" fill="rgb(232,124,30)" rx="2" ry="2" />
<text  x="1049.82" y="95.5" ></text>
</g>
<g >
<title>B_add (1,872 samples, 0.24%)</title><rect x="319.0" y="85" width="2.9" height="15.0" fill="rgb(253,143,53)" rx="2" ry="2" />
<text  x="322.03" y="95.5" ></text>
</g>
<g >
<title>motoko_rts::types::object_size::h3062e2e82e720f4d (128 samples, 0.02%)</title><rect x="1189.7" y="101" width="0.2" height="15.0" fill="rgb(242,127,40)" rx="2" ry="2" />
<text  x="1192.74" y="111.5" ></text>
</g>
<g >
<title>opt_inject (320 samples, 0.04%)</title><rect x="297.6" y="85" width="0.5" height="15.0" fill="rgb(241,186,39)" rx="2" ry="2" />
<text  x="300.60" y="95.5" ></text>
</g>
<g >
<title>Array.idx_bigint (11,928 samples, 1.54%)</title><rect x="80.8" y="101" width="18.2" height="15.0" fill="rgb(238,150,36)" rx="2" ry="2" />
<text  x="83.77" y="111.5" ></text>
</g>
<g >
<title>B_add (1,664 samples, 0.22%)</title><rect x="294.0" y="85" width="2.5" height="15.0" fill="rgb(253,143,53)" rx="2" ry="2" />
<text  x="296.96" y="95.5" ></text>
</g>
<g >
<title>alloc_blob (400 samples, 0.05%)</title><rect x="55.8" y="85" width="0.6" height="15.0" fill="rgb(239,128,38)" rx="2" ry="2" />
<text  x="58.81" y="95.5" ></text>
</g>
<g >
<title>can_tag_i64 (2,304 samples, 0.30%)</title><rect x="168.3" y="69" width="3.5" height="15.0" fill="rgb(234,106,32)" rx="2" ry="2" />
<text  x="171.26" y="79.5" ></text>
</g>
<g >
<title>can_tag_i64 (3,976 samples, 0.51%)</title><rect x="142.1" y="85" width="6.1" height="15.0" fill="rgb(234,106,32)" rx="2" ry="2" />
<text  x="145.10" y="95.5" ></text>
</g>
<g >
<title>opt_project (1,440 samples, 0.19%)</title><rect x="180.4" y="101" width="2.2" height="15.0" fill="rgb(241,186,39)" rx="2" ry="2" />
<text  x="183.36" y="111.5" ></text>
</g>
<g >
<title>text_to_buf (29,208 samples, 3.78%)</title><rect x="11.2" y="69" width="44.6" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="14.17" y="79.5" >text..</text>
</g>
<g >
<title>B_add (12,922 samples, 1.67%)</title><rect x="99.0" y="101" width="19.8" height="15.0" fill="rgb(253,143,53)" rx="2" ry="2" />
<text  x="102.00" y="111.5" ></text>
</g>
<g >
<title>nat_sub (9,912 samples, 1.28%)</title><rect x="1118.2" y="69" width="15.1" height="15.0" fill="rgb(228,158,25)" rx="2" ry="2" />
<text  x="1121.18" y="79.5" ></text>
</g>
<g >
<title>@deserialize&lt;III&gt; (4,191 samples, 0.54%)</title><rect x="1142.1" y="133" width="6.4" height="15.0" fill="rgb(243,176,41)" rx="2" ry="2" />
<text  x="1145.12" y="143.5" ></text>
</g>
<g >
<title>$lambda (8,964 samples, 1.16%)</title><rect x="1168.7" y="133" width="13.7" height="15.0" fill="rgb(240,133,38)" rx="2" ry="2" />
<text  x="1171.67" y="143.5" ></text>
</g>
<g >
<title>Array_init (861 samples, 0.11%)</title><rect x="280.4" y="117" width="1.3" height="15.0" fill="rgb(236,150,34)" rx="2" ry="2" />
<text  x="283.43" y="127.5" ></text>
</g>
<g >
<title>can_tag_i64 (576 samples, 0.07%)</title><rect x="321.0" y="69" width="0.9" height="15.0" fill="rgb(234,106,32)" rx="2" ry="2" />
<text  x="324.01" y="79.5" ></text>
</g>
<g >
<title>Array.idx (288 samples, 0.04%)</title><rect x="318.6" y="69" width="0.4" height="15.0" fill="rgb(247,150,46)" rx="2" ry="2" />
<text  x="321.59" y="79.5" ></text>
</g>
<g >
<title>opponent (296 samples, 0.04%)</title><rect x="329.2" y="85" width="0.4" height="15.0" fill="rgb(241,199,39)" rx="2" ry="2" />
<text  x="332.16" y="95.5" ></text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h00179c2d1f1f86d3 (891 samples, 0.12%)</title><rect x="1140.8" y="69" width="1.3" height="15.0" fill="rgb(247,127,47)" rx="2" ry="2" />
<text  x="1143.76" y="79.5" ></text>
</g>
<g >
<title>B_add (11,076 samples, 1.43%)</title><rect x="540.9" y="69" width="16.9" height="15.0" fill="rgb(253,143,53)" rx="2" ry="2" />
<text  x="543.86" y="79.5" ></text>
</g>
<g >
<title>can_tag_i64 (3,976 samples, 0.51%)</title><rect x="112.7" y="85" width="6.1" height="15.0" fill="rgb(234,106,32)" rx="2" ry="2" />
<text  x="115.68" y="95.5" ></text>
</g>
<g >
<title>B_add (78 samples, 0.01%)</title><rect x="302.8" y="117" width="0.1" height="15.0" fill="rgb(253,143,53)" rx="2" ry="2" />
<text  x="305.78" y="127.5" ></text>
</g>
<g >
<title>Array.idx (816 samples, 0.11%)</title><rect x="289.9" y="85" width="1.2" height="15.0" fill="rgb(247,150,46)" rx="2" ry="2" />
<text  x="292.88" y="95.5" ></text>
</g>
<g >
<title>B_mul (5,852 samples, 0.76%)</title><rect x="502.2" y="101" width="9.0" height="15.0" fill="rgb(232,143,30)" rx="2" ry="2" />
<text  x="505.22" y="111.5" ></text>
</g>
<g >
<title>obj_idx&lt;0&gt; (612 samples, 0.08%)</title><rect x="179.4" y="101" width="1.0" height="15.0" fill="rgb(247,139,46)" rx="2" ry="2" />
<text  x="182.43" y="111.5" ></text>
</g>
<g >
<title>Array.idx_bigint (72 samples, 0.01%)</title><rect x="302.7" y="117" width="0.1" height="15.0" fill="rgb(238,150,36)" rx="2" ry="2" />
<text  x="305.67" y="127.5" ></text>
</g>
<g >
<title>compacting_gc (4,155 samples, 0.54%)</title><rect x="1183.6" y="133" width="6.3" height="15.0" fill="rgb(227,149,24)" rx="2" ry="2" />
<text  x="1186.59" y="143.5" ></text>
</g>
<g >
<title>range (6,228 samples, 0.81%)</title><rect x="182.6" y="101" width="9.5" height="15.0" fill="rgb(247,146,46)" rx="2" ry="2" />
<text  x="185.56" y="111.5" ></text>
</g>
<g >
<title>can_tag_i64 (192 samples, 0.02%)</title><rect x="327.9" y="53" width="0.3" height="15.0" fill="rgb(234,106,32)" rx="2" ry="2" />
<text  x="330.88" y="63.5" ></text>
</g>
<g >
<title>B_ge (528 samples, 0.07%)</title><rect x="322.2" y="85" width="0.8" height="15.0" fill="rgb(241,124,39)" rx="2" ry="2" />
<text  x="325.24" y="95.5" ></text>
</g>
<g >
<title>exists (1,816 samples, 0.24%)</title><rect x="326.4" y="85" width="2.8" height="15.0" fill="rgb(234,142,32)" rx="2" ry="2" />
<text  x="329.38" y="95.5" ></text>
</g>
<g >
<title>nat_sub (252 samples, 0.03%)</title><rect x="149.6" y="85" width="0.4" height="15.0" fill="rgb(228,158,25)" rx="2" ry="2" />
<text  x="152.61" y="95.5" ></text>
</g>
<g >
<title>sleb128_decode (756 samples, 0.10%)</title><rect x="1146.2" y="101" width="1.2" height="15.0" fill="rgb(250,128,49)" rx="2" ry="2" />
<text  x="1149.21" y="111.5" ></text>
</g>
<g >
<title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::he83cfa60960fe5f5 (1,288 samples, 0.17%)</title><rect x="269.3" y="101" width="2.0" height="15.0" fill="rgb(242,127,41)" rx="2" ry="2" />
<text  x="272.31" y="111.5" ></text>
</g>
<g >
<title>memcpy (552 samples, 0.07%)</title><rect x="278.7" y="101" width="0.8" height="15.0" fill="rgb(248,144,48)" rx="2" ry="2" />
<text  x="281.67" y="111.5" ></text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h00179c2d1f1f86d3 (1,188 samples, 0.15%)</title><rect x="190.3" y="69" width="1.8" height="15.0" fill="rgb(247,127,47)" rx="2" ry="2" />
<text  x="193.27" y="79.5" ></text>
</g>
<g >
<title>leb128_decode (536 samples, 0.07%)</title><rect x="244.9" y="101" width="0.8" height="15.0" fill="rgb(250,149,49)" rx="2" ry="2" />
<text  x="247.89" y="111.5" ></text>
</g>
<g >
<title>motoko_rts::gc::mark_compact::mark_stack::push_mark_stack::hca7927c3a9867c4e (200 samples, 0.03%)</title><rect x="271.7" y="85" width="0.3" height="15.0" fill="rgb(242,127,41)" rx="2" ry="2" />
<text  x="274.71" y="95.5" ></text>
</g>
<g >
<title>can_tag_i64 (1,672 samples, 0.22%)</title><rect x="508.6" y="85" width="2.6" height="15.0" fill="rgb(234,106,32)" rx="2" ry="2" />
<text  x="511.60" y="95.5" ></text>
</g>
<g >
<title>Array.idx_bigint (576 samples, 0.07%)</title><rect x="318.1" y="85" width="0.9" height="15.0" fill="rgb(238,150,36)" rx="2" ry="2" />
<text  x="321.15" y="95.5" ></text>
</g>
<g >
<title>alloc_words (126 samples, 0.02%)</title><rect x="1148.8" y="133" width="0.2" height="15.0" fill="rgb(241,128,39)" rx="2" ry="2" />
<text  x="1151.78" y="143.5" ></text>
</g>
<g >
<title>motoko_rts::gc::mark_compact::mark_object::h909fe7689dd42125 (480 samples, 0.06%)</title><rect x="271.3" y="101" width="0.7" height="15.0" fill="rgb(242,127,41)" rx="2" ry="2" />
<text  x="274.28" y="111.5" ></text>
</g>
<g >
<title>range (173 samples, 0.02%)</title><rect x="298.6" y="101" width="0.3" height="15.0" fill="rgb(247,146,46)" rx="2" ry="2" />
<text  x="301.60" y="111.5" ></text>
</g>
<g >
<title>B_eq (74 samples, 0.01%)</title><rect x="302.9" y="117" width="0.1" height="15.0" fill="rgb(239,130,38)" rx="2" ry="2" />
<text  x="305.90" y="127.5" ></text>
</g>
<g >
<title>motoko_rts::gc::mark_compact::mark_object::h909fe7689dd42125 (360 samples, 0.05%)</title><rect x="1167.2" y="101" width="0.6" height="15.0" fill="rgb(242,127,41)" rx="2" ry="2" />
<text  x="1170.22" y="111.5" ></text>
</g>
<g >
<title>@buffer_size&lt;t&gt; (111 samples, 0.01%)</title><rect x="301.1" y="85" width="0.2" height="15.0" fill="rgb(244,118,43)" rx="2" ry="2" />
<text  x="304.11" y="95.5" ></text>
</g>
<g >
<title>alloc_blob (300 samples, 0.04%)</title><rect x="301.9" y="85" width="0.4" height="15.0" fill="rgb(239,128,38)" rx="2" ry="2" />
<text  x="304.87" y="95.5" ></text>
</g>
<g >
<title>nat_sub (189 samples, 0.02%)</title><rect x="512.2" y="85" width="0.3" height="15.0" fill="rgb(228,158,25)" rx="2" ry="2" />
<text  x="515.23" y="95.5" ></text>
</g>
<g >
<title>nat_sub (168 samples, 0.02%)</title><rect x="330.7" y="69" width="0.3" height="15.0" fill="rgb(228,158,25)" rx="2" ry="2" />
<text  x="333.71" y="79.5" ></text>
</g>
<g >
<title>B_mul (84 samples, 0.01%)</title><rect x="307.9" y="101" width="0.2" height="15.0" fill="rgb(232,143,30)" rx="2" ry="2" />
<text  x="310.95" y="111.5" ></text>
</g>
<g >
<title>memcpy (72 samples, 0.01%)</title><rect x="1183.4" y="117" width="0.1" height="15.0" fill="rgb(248,144,48)" rx="2" ry="2" />
<text  x="1186.40" y="127.5" ></text>
</g>
<g >
<title>can_tag_i64 (11,328 samples, 1.47%)</title><rect x="1100.9" y="69" width="17.3" height="15.0" fill="rgb(234,106,32)" rx="2" ry="2" />
<text  x="1103.87" y="79.5" ></text>
</g>
<g >
<title>B_gt (715 samples, 0.09%)</title><rect x="1180.0" y="85" width="1.1" height="15.0" fill="rgb(232,124,30)" rx="2" ry="2" />
<text  x="1183.01" y="95.5" ></text>
</g>
<g >
<title>trans_state4 (69 samples, 0.01%)</title><rect x="1168.5" y="133" width="0.1" height="15.0" fill="rgb(243,158,42)" rx="2" ry="2" />
<text  x="1171.45" y="143.5" ></text>
</g>
<g >
<title>B_sub (396 samples, 0.05%)</title><rect x="315.9" y="69" width="0.6" height="15.0" fill="rgb(228,124,25)" rx="2" ry="2" />
<text  x="318.89" y="79.5" ></text>
</g>
<g >
<title>B_sub (165 samples, 0.02%)</title><rect x="1175.0" y="101" width="0.3" height="15.0" fill="rgb(228,124,25)" rx="2" ry="2" />
<text  x="1178.05" y="111.5" ></text>
</g>
<g >
<title>B_add (103,272 samples, 13.38%)</title><rect x="717.0" y="85" width="157.8" height="15.0" fill="rgb(253,143,53)" rx="2" ry="2" />
<text  x="720.01" y="95.5" >B_add</text>
</g>
<g >
<title>memcpy (180 samples, 0.02%)</title><rect x="301.6" y="53" width="0.3" height="15.0" fill="rgb(248,144,48)" rx="2" ry="2" />
<text  x="304.60" y="63.5" ></text>
</g>
<g >
<title>can_tag_i64 (512 samples, 0.07%)</title><rect x="1179.2" y="69" width="0.8" height="15.0" fill="rgb(234,106,32)" rx="2" ry="2" />
<text  x="1182.23" y="79.5" ></text>
</g>
<g >
<title>parse_idl_header (1,152 samples, 0.15%)</title><rect x="244.0" y="117" width="1.8" height="15.0" fill="rgb(243,149,41)" rx="2" ry="2" />
<text  x="247.01" y="127.5" ></text>
</g>
<g >
<title>Array.idx (13,680 samples, 1.77%)</title><rect x="696.1" y="69" width="20.9" height="15.0" fill="rgb(247,150,46)" rx="2" ry="2" />
<text  x="699.10" y="79.5" ></text>
</g>
<g >
<title>range (4,671 samples, 0.60%)</title><rect x="1135.0" y="101" width="7.1" height="15.0" fill="rgb(247,146,46)" rx="2" ry="2" />
<text  x="1137.98" y="111.5" ></text>
</g>
<g >
<title>$lambda (550,797 samples, 71.34%)</title><rect x="300.3" y="133" width="841.8" height="15.0" fill="rgb(240,133,38)" rx="2" ry="2" />
<text  x="303.30" y="143.5" >$lambda</text>
</g>
<g >
<title>Array.idx_bigint (96 samples, 0.01%)</title><rect x="325.6" y="85" width="0.1" height="15.0" fill="rgb(238,150,36)" rx="2" ry="2" />
<text  x="328.59" y="95.5" ></text>
</g>
<g >
<title>B_mul (140 samples, 0.02%)</title><rect x="1174.8" y="101" width="0.2" height="15.0" fill="rgb(232,143,30)" rx="2" ry="2" />
<text  x="1177.83" y="111.5" ></text>
</g>
<g >
<title>@buffer_size&lt;t&gt; (148 samples, 0.02%)</title><rect x="10.7" y="85" width="0.2" height="15.0" fill="rgb(244,118,43)" rx="2" ry="2" />
<text  x="13.68" y="95.5" ></text>
</g>
<g >
<title>board (172,180 samples, 22.30%)</title><rect x="10.0" y="149" width="263.2" height="15.0" fill="rgb(249,157,49)" rx="2" ry="2" />
<text  x="13.00" y="159.5" >board</text>
</g>
<g >
<title>can_tag_i64 (31,776 samples, 4.12%)</title><rect x="826.3" y="69" width="48.5" height="15.0" fill="rgb(234,106,32)" rx="2" ry="2" />
<text  x="829.28" y="79.5" >can_..</text>
</g>
<g >
<title>B_add (1,404 samples, 0.18%)</title><rect x="311.5" y="69" width="2.1" height="15.0" fill="rgb(253,143,53)" rx="2" ry="2" />
<text  x="314.48" y="79.5" ></text>
</g>
<g >
<title>opponent (111 samples, 0.01%)</title><rect x="305.1" y="117" width="0.2" height="15.0" fill="rgb(241,199,39)" rx="2" ry="2" />
<text  x="308.08" y="127.5" ></text>
</g>
<g >
<title>Array.idx_bigint (1,632 samples, 0.21%)</title><rect x="288.6" y="101" width="2.5" height="15.0" fill="rgb(238,150,36)" rx="2" ry="2" />
<text  x="291.63" y="111.5" ></text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h00179c2d1f1f86d3 (308 samples, 0.04%)</title><rect x="242.3" y="69" width="0.5" height="15.0" fill="rgb(247,127,47)" rx="2" ry="2" />
<text  x="245.34" y="79.5" ></text>
</g>
<g >
<title>alloc_words (126 samples, 0.02%)</title><rect x="1182.2" y="85" width="0.2" height="15.0" fill="rgb(241,128,39)" rx="2" ry="2" />
<text  x="1185.18" y="95.5" ></text>
</g>
<g >
<title>compacting_gc (17,548 samples, 2.27%)</title><rect x="246.1" y="133" width="26.8" height="15.0" fill="rgb(227,149,24)" rx="2" ry="2" />
<text  x="249.11" y="143.5" >c..</text>
</g>
<g >
<title>text_concat (33,188 samples, 4.30%)</title><rect x="192.1" y="101" width="50.7" height="15.0" fill="rgb(232,171,30)" rx="2" ry="2" />
<text  x="195.08" y="111.5" >text_..</text>
</g>
<g >
<title>can_tag_i64 (192 samples, 0.02%)</title><rect x="330.4" y="69" width="0.3" height="15.0" fill="rgb(234,106,32)" rx="2" ry="2" />
<text  x="333.42" y="79.5" ></text>
</g>
<g >
<title>motoko_rts::types::object_size::h3062e2e82e720f4d (512 samples, 0.07%)</title><rect x="272.2" y="101" width="0.7" height="15.0" fill="rgb(242,127,40)" rx="2" ry="2" />
<text  x="275.15" y="111.5" ></text>
</g>
<g >
<title>Array.idx (816 samples, 0.11%)</title><rect x="1173.4" y="85" width="1.2" height="15.0" fill="rgb(247,150,46)" rx="2" ry="2" />
<text  x="1176.39" y="95.5" ></text>
</g>
<g >
<title>B_mul (112 samples, 0.01%)</title><rect x="326.2" y="85" width="0.2" height="15.0" fill="rgb(232,143,30)" rx="2" ry="2" />
<text  x="329.21" y="95.5" ></text>
</g>
<g >
<title>can_tag_i64 (1,648 samples, 0.21%)</title><rect x="468.9" y="85" width="2.5" height="15.0" fill="rgb(234,106,32)" rx="2" ry="2" />
<text  x="471.88" y="95.5" ></text>
</g>
<g >
<title>memcpy (240 samples, 0.03%)</title><rect x="26.6" y="53" width="0.4" height="15.0" fill="rgb(248,144,48)" rx="2" ry="2" />
<text  x="29.59" y="63.5" ></text>
</g>
</g>
</svg>
